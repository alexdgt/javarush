package com.javarush.test.level18.lesson10.home08;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

/* Нити и байты
Читайте с консоли имена файлов, пока не будет введено слово "exit"
Передайте имя файла в нить ReadThread
Нить ReadThread должна найти байт, который встречается в файле максимальное число раз, и добавить его в словарь resultMap,
где параметр String - это имя файла, параметр Integer - это искомый байт.
Закрыть потоки. Не использовать try-with-resources
*/

public class Solution {
    public static Map<String, Integer> resultMap = new HashMap<String, Integer>();

    public static void main(String[] args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        while (true){
            String fileName = reader.readLine();
            if (!fileName.equals("exit")){
                ReadThread readThread = new ReadThread(fileName);
                readThread.start();
            }
            else break;
        }
        reader.close();
    }

    public static class ReadThread extends Thread {
        private String fileName;
        private Map<Integer,Integer> mapByteCount = new TreeMap<Integer, Integer>();
        public ReadThread(String fileName) {
            this.fileName = fileName;

        }
        public void run() {
            try
            {
                FileInputStream fileInputStream = new FileInputStream(fileName);
                while (fileInputStream.available() > 0){
                    int tmp = fileInputStream.read();
                    if (mapByteCount.containsKey(tmp)) mapByteCount.put(tmp,mapByteCount.get(tmp)+1);
                    else mapByteCount.put(tmp,1);
                }
                fileInputStream.close();
            }
            catch (Exception e)
            {

            }
            int maxCount = 0;
            int maxByte =0;
            for (Map.Entry<Integer,Integer> entry : mapByteCount.entrySet()){

                if (entry.getValue() >= maxCount){
                    maxByte = entry.getKey();
                    maxCount = entry.getValue();
                }
            }
            resultMap.put(fileName,maxByte);
        }
    }
}

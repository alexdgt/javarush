package com.javarush.test.level20.lesson07.task03;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

/* Externalizable Person
Класс Person должен сериализоваться с помощью интерфейса Externalizable.
Подумайте, какие поля не нужно сериализовать.
Исправьте ошибку сериализации.
Сигнатуры методов менять нельзя.
*/
public class Solution {
    public static void main(String [] args) throws Exception {
        Person person = new Person("John","Dow",43);
        Person father = new Person("James","Dow", 76);
        Person mother = new Person("Mary","Dow", 75);
        Person son = new Person("Jack", "Dow", 9);
        Person daughter = new Person("Lisa","Dow", 7);

        person.setFather(father);
        person.setMother(mother);
        List <Person> siblings = new ArrayList<Person>();
        siblings.add(son);
        siblings.add(daughter);
        person.setChildren(siblings);

        System.out.println("До сохранения:" + " " + person.firstName + " " + person.lastName+ " "+ person.age + "\n" +
        person.father.firstName + " " + person.father.lastName + " " + person.father.age + "\n"
        + person.mother.firstName + " " + person.mother.lastName+ " " + person.mother.age +  "\n" +
        person.children.get(0).firstName + " " + person.children.get(0).lastName+ " " + person.children.get(0).age +"\n"
        + person.children.get(1).firstName + " "+ person.children.get(1).lastName +" "+ person.children.get(1).age);

        ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream("c:/1/person.dat"));
        person.writeExternal(outputStream);
        outputStream.close();

        ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream("c:/1/person.dat"));
        Person newPerson = (Person) inputStream.readObject();
        inputStream.close();

        System.out.println("После сохранения:" + " " + newPerson.firstName + " " + newPerson.lastName+ " "+ newPerson.age + "\n" +
                newPerson.father.firstName + " " + newPerson.father.lastName + " " + newPerson.father.age + "\n"
                + newPerson.mother.firstName + " " + newPerson.mother.lastName+ " " + newPerson.mother.age +  "\n" +
                newPerson.children.get(0).firstName + " " + newPerson.children.get(0).lastName+ " " + newPerson.children.get(0).age +"\n"
                + newPerson.children.get(1).firstName + " "+ newPerson.children.get(1).lastName +" "+ newPerson.children.get(1).age);
    }


    public static class Person implements Externalizable {
        private String firstName;
        private String lastName;
        private int age;
        private Person mother;
        private Person father;
        private List<Person> children;

        public Person() {}

        public Person(String firstName, String lastName, int age) {
            this.firstName = firstName;
            this.lastName = lastName;
            this.age = age;
        }
        public void setMother(Person mother) {
            this.mother = mother;
        }
        public void setFather(Person father) {
            this.father = father;
        }
        public void setChildren(List<Person> children) {
            this.children = children;
        }
        @Override
        public void writeExternal(ObjectOutput out) throws IOException {

            out.writeObject(this.mother);
            out.writeObject(this.father);
            out.writeObject(this.firstName);
            out.writeObject(this.lastName);
            out.writeInt(this.age);
            out.writeObject(this.children);
        }
        @Override
        public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {

            mother = (Person)in.readObject();
            father = (Person)in.readObject();
            firstName = (String)in.readObject();
            lastName = (String)in.readObject();
            age = in.readInt();
            children = (List<Person>)in.readObject();
        }
    }
}
